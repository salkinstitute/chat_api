version: "3.8"

services:

   # edge router for all services.
  traefik:
    image: traefik:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "9221:9229"
 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs/dev:/etc/certs
      - ./traefik.toml:/etc/traefik/traefik.toml
      - ./traefik_dynamic.toml:/etc/traefik/traefik_dynamic.toml
    # Necessary to add an internal route to traefik
    # for any containers that need to communicate by FQDN (Fully qualified domain name)
    # Traefik handles the rest.
    environment:
      - CERT_PATH=/etc/certs/chat-api.local+4.pem
      - CERT_KEY_PATH=/etc/certs/chat-api.local+4-key.pem
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      
    labels:
      # - "traefik.wss.protocol=https"
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.c-space.local`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.middlewares=simpleAuth"
      # - "traefik.docker.network=web"
      # user:admin, pwd:secure_password
      # Note: all dollar signs in the hash need to be doubled for escaping.
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
      - "traefik.http.middlewares.simpleAuth.basicAuth.users=admin:$$apr1$$x1hNnJQi$$t3r5de9.TXk0IvEtxs74a1"


  chat_api:
    restart: unless-stopped
    image: salk/chat_api:latest
    build:
      context: ./
      dockerfile: Dockerfile

    volumes:
      - ./:/app

    expose:
      - 8000
    env_file:
      - ./.env
    working_dir: /app
  
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
  
    depends_on:
      - mongo
      - traefik

    labels:
      
      - "traefik.http.services.chat_api.loadbalancer.server.port=8000"
      - "traefik.http.routers.chat_api.tls=true"
      - "traefik.http.routers.chat_api.entrypoints=websecure"
      - "traefik.http.routers.chat_api.rule=Host(`chat-api.local`)"

  slack_chat_api:
    image: salk/chat_api:latest
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile

    volumes:
      - ./:/app

    expose:
      - 8000
    env_file:
      - ./.env

    working_dir: /app

    command: "python -m app.slack.main"

    depends_on:
      - mongo
      - traefik

    labels:
      
      - "traefik.http.services.slack_chat_api.loadbalancer.server.port=8000"
      - "traefik.http.routers.slack_chat_api.tls=true"
      - "traefik.http.routers.slack_chat_api.entrypoints=websecure"
      - "traefik.http.routers.slack_chat_api.rule=Host(`slack.chat-api.local`)"


  mongo:
      image: docker.io/bitnami/mongodb:${MONGODB_VERSION:-6.0.6}
      restart: unless-stopped
      volumes:
        - ./mongodb/db:/bitnami/mongodb
      environment:
        MONGODB_REPLICA_SET_MODE: primary
        MONGODB_REPLICA_SET_NAME: ${MONGODB_REPLICA_SET_NAME:-rs0}
        MONGODB_PORT_NUMBER: ${MONGODB_PORT_NUMBER:-27017}
        MONGODB_INITIAL_PRIMARY_HOST: ${MONGODB_INITIAL_PRIMARY_HOST:-mongo}
        MONGODB_INITIAL_PRIMARY_PORT_NUMBER: ${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}
        MONGODB_ADVERTISED_HOSTNAME: ${MONGODB_ADVERTISED_HOSTNAME:-mongo}
        MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL:-true}
        ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD:-yes}

  mex:
    image: mongo-express:latest
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN-mex}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD-Just4mex}
    ports:
      - "8081:8081"
    depends_on:
      - mongo
      - traefik
    labels:
      - traefik.http.routers.mex.rule=Host(`mex.chat-api.local`)
      - traefik.http.routers.mex.tls=true

